#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("scalable_linalg/triangular_inv.dml") as tinv
source("scalable_linalg/qr.dml") as decomp

Inverse = function(Matrix[double] A, int nb)
  return(Matrix[double] X) {
    # TODO: Some recent papers discuss Block-Recursive algorithm for
    # matrix inverse which can be explored instead of QR decomposition

    [Q, R] = decomp::QR(A, nb)

    Rinv = tinv::U_triangular_inv(R)

    X = R %*% t(Q)
}
