#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

source("scalable_linalg/triangular_inv.dml") as inv

Choleskey = function(Matrix[double] A, int nb)
  return(Matrix[double] L) {
    n = ncol(A)

    if (n <= nb) {
      L = cholesky(A)
    } else {
      k = as.integer(floor(n/2))
      A11 = A[1:k,1:k]
      A21 = A[k+1:n,1:k]
      A22 = A[k+1:n,k+1:n]

      L11 = Choleskey(A11, nb)
      L11inv = inv::U_triangular_inv(t(L11))
      L21 = A21 %*% L11inv
      A22 = A22 - L21 %*% t(L21)
      L22 = Choleskey(A22, nb)
      L12 = matrix(0, rows=nrow(L11), cols=ncol(L22))

      L = rbind(cbind(L11, L12), cbind(L21, L22))
    }
}
